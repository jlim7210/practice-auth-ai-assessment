spring:
  application:
    name: practice-auth23
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    url: ${DATASOURCE_URL}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update #initialize behavior. create = drop and create, update = create if not exist
  security:
    oauth2:
      client:
        registration:
            google:
                client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
                client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
                scope:
                - email
                - profile
            github:
                client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID}
                client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET}
                scope:
                - user:email
  mvc:
    cors:
      allowed-origins: "http://localhost:8090"
      allowed-methods: GET, POST, PUT, DELETE, OPTIONS

jwt:
  secret: ${JWT_SECRET_KEY}
  salt: ${JWT_SALT}
  token:
    access:
      expiration: ${ACCESS_TOKEN_EXPIRATION_TIME}
    refresh:
      expiration: ${REFRESH_TOKEN_EXPIRATION_TIME}

server:
  port: 8090